<story path="trainer_couples.story" title="">
<narrative keyword="Narrative:">
  <inOrderTo keyword="As a">training manager</inOrderTo>
  <asA keyword="I want to">have the trainers of every class be well considered couples</asA>
  <iWantTo keyword="So that">I assure that the class is given as well as possible</iWantTo>
</narrative>
<scenario keyword="Scenario:" title="many trainers are available">
<examples keyword="Examples:">
<step>Given the trainings manager wants to select &lt;trainer1&gt; and &lt;trainer2&gt; for a class</step>
<step>And &lt;numberOfTrainers&gt; qualified trainers from other projects are available</step>
<step>When &lt;trainer1&gt; works on &lt;trainer1Project&gt;</step>
<step>And &lt;trainer2&gt; works on &lt;trainer2Project&gt;</step>
<step>Then these trainers are &lt;allowedStatus&gt;</step>
<parameters>
<names><name>trainer1</name><name>trainer2</name><name>numberOfTrainers</name><name>trainer1Project</name><name>trainer2Project</name><name>allowedStatus</name></names>
<values><value>Davy</value><value>Stijn</value><value>10</value><value>RSVZ</value><value>RSVZ</value><value>not allowed to work together</value></values>
<values><value>Karl</value><value>Frank</value><value>10</value><value>RSVZ</value><value>RSVZ</value><value>not allowed to work together</value></values>
<values><value>Davy</value><value>Tom</value><value>10</value><value>RSVZ</value><value>Ventouris</value><value>allowed to work together</value></values>
<values><value>Davy</value><value>Jos</value><value>10</value><value>RSVZ</value><value>Ventouris</value><value>allowed to work together</value></values>
</parameters>

<example keyword="Example:">{trainer1=Davy, trainer2=Stijn, numberOfTrainers=10, trainer1Project=RSVZ, trainer2Project=RSVZ, allowedStatus=not allowed to work together}</example>
<step outcome="successful">Given the trainings manager wants to select <parameter>Davy</parameter> and <parameter>Stijn</parameter> for a class</step>
<step outcome="successful">And <parameter>10</parameter> qualified trainers from other projects are available</step>
<step outcome="successful">When <parameter>Davy</parameter> works on <parameter>RSVZ</parameter></step>
<step outcome="successful">And <parameter>Stijn</parameter> works on <parameter>RSVZ</parameter></step>
<step outcome="successful">Then these trainers are <parameter>not allowed to work together</parameter></step>

<example keyword="Example:">{trainer1=Karl, trainer2=Frank, numberOfTrainers=10, trainer1Project=RSVZ, trainer2Project=RSVZ, allowedStatus=not allowed to work together}</example>
<step outcome="successful">Given the trainings manager wants to select <parameter>Karl</parameter> and <parameter>Frank</parameter> for a class</step>
<step outcome="successful">And <parameter>10</parameter> qualified trainers from other projects are available</step>
<step outcome="successful">When <parameter>Karl</parameter> works on <parameter>RSVZ</parameter></step>
<step outcome="successful">And <parameter>Frank</parameter> works on <parameter>RSVZ</parameter></step>
<step outcome="successful">Then these trainers are <parameter>not allowed to work together</parameter></step>

<example keyword="Example:">{trainer1=Davy, trainer2=Tom, numberOfTrainers=10, trainer1Project=RSVZ, trainer2Project=Ventouris, allowedStatus=allowed to work together}</example>
<step outcome="successful">Given the trainings manager wants to select <parameter>Davy</parameter> and <parameter>Tom</parameter> for a class</step>
<step outcome="successful">And <parameter>10</parameter> qualified trainers from other projects are available</step>
<step outcome="successful">When <parameter>Davy</parameter> works on <parameter>RSVZ</parameter></step>
<step outcome="successful">And <parameter>Tom</parameter> works on <parameter>Ventouris</parameter></step>
<step outcome="successful">Then these trainers are <parameter>allowed to work together</parameter></step>

<example keyword="Example:">{trainer1=Davy, trainer2=Jos, numberOfTrainers=10, trainer1Project=RSVZ, trainer2Project=Ventouris, allowedStatus=allowed to work together}</example>
<step outcome="successful">Given the trainings manager wants to select <parameter>Davy</parameter> and <parameter>Jos</parameter> for a class</step>
<step outcome="successful">And <parameter>10</parameter> qualified trainers from other projects are available</step>
<step outcome="successful">When <parameter>Davy</parameter> works on <parameter>RSVZ</parameter></step>
<step outcome="successful">And <parameter>Jos</parameter> works on <parameter>Ventouris</parameter></step>
<step outcome="successful">Then these trainers are <parameter>allowed to work together</parameter></step>
</examples>
</scenario>
<scenario keyword="Scenario:" title="only qualified trainers from the same project are available">
<examples keyword="Examples:">
<step>Given the trainings manager wants to select &lt;trainer1&gt; and &lt;trainer2&gt; for a class</step>
<step>And &lt;numberOfTrainers&gt; qualified trainers from other projects are available</step>
<step>When &lt;trainer1&gt; works on &lt;trainer1Project&gt;</step>
<step>And &lt;trainer2&gt; works on &lt;trainer2Project&gt;</step>
<step>Then these trainers are &lt;allowedStatus&gt;</step>
<parameters>
<names><name>trainer1</name><name>trainer2</name><name>numberOfTrainers</name><name>trainer1Project</name><name>trainer2Project</name><name>allowedStatus</name></names>
<values><value>Davy</value><value>Stijn</value><value>2</value><value>RSVZ</value><value>RSVZ</value><value>allowed to work together</value></values>
<values><value>Karl</value><value>Frank</value><value>2</value><value>RSVZ</value><value>RSVZ</value><value>allowed to work together</value></values>
</parameters>

<example keyword="Example:">{trainer1=Davy, trainer2=Stijn, numberOfTrainers=2, trainer1Project=RSVZ, trainer2Project=RSVZ, allowedStatus=allowed to work together}</example>
<step outcome="successful">Given the trainings manager wants to select <parameter>Davy</parameter> and <parameter>Stijn</parameter> for a class</step>
<step outcome="successful">And <parameter>2</parameter> qualified trainers from other projects are available</step>
<step outcome="successful">When <parameter>Davy</parameter> works on <parameter>RSVZ</parameter></step>
<step outcome="successful">And <parameter>Stijn</parameter> works on <parameter>RSVZ</parameter></step>
<step outcome="successful">Then these trainers are <parameter>allowed to work together</parameter></step>

<example keyword="Example:">{trainer1=Karl, trainer2=Frank, numberOfTrainers=2, trainer1Project=RSVZ, trainer2Project=RSVZ, allowedStatus=allowed to work together}</example>
<step outcome="successful">Given the trainings manager wants to select <parameter>Karl</parameter> and <parameter>Frank</parameter> for a class</step>
<step outcome="successful">And <parameter>2</parameter> qualified trainers from other projects are available</step>
<step outcome="successful">When <parameter>Karl</parameter> works on <parameter>RSVZ</parameter></step>
<step outcome="successful">And <parameter>Frank</parameter> works on <parameter>RSVZ</parameter></step>
<step outcome="successful">Then these trainers are <parameter>allowed to work together</parameter></step>
</examples>
</scenario>
</story>
